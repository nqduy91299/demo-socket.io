<style>
  * {
    box-sizing: border-box;
  }

  .user {
    display: flex;
    align-items: center;
    padding: 12px 24px;
    cursor: pointer;
  }

  .user:nth-child(odd) {
    background-color: #F4F5F7;
  }

  .user:hover {
    background-color: #E6EFFF;
    transition: 0.3s;
  }

  .avatar {
    font-weight: bold;
    font-size: 1.5rem;
    background-color: deepskyblue;
    width: 50px;
    height: 50px;
    margin-right: 16px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white
  }

  .user-info {
    height: 50px;
    flex-grow: 1;
  }

  .user-name {
    font-size: 1.1rem;

  }

  .user-info .online {
    font-size: 0.9rem;
    color: rgb(99, 99, 99)
  }

  .user .status {
    width: 90px;
    text-align: center;
  }

  .user:hover {
    background-color: #E6EFFF;
  }

  .user:hover .avatar {
    background-color: rgb(7, 142, 204);
    transition: 0.3s;
  }

  .user:hover .user-name {
    font-weight: 450;
    transition: 0.3s;
  }

  .conversation {
    background-color: rgb(158, 158, 158);
    padding: 24px;
    height: 75vh;
    overflow: auto;
  }

  .message {
    border-radius: 8px;
    padding: 12px;
    margin-bottom: 12px;
    width: max-content;
    max-width: 60%;
    font-size: 0.9rem;
  }

  .img-message {
    border-radius: 8px;
    margin-bottom: 12px;
    width: max-content;
    max-width: 50%;
  }

  .img-message img {
    max-width: 100%;
    border-radius: 12px;
  }

  .img-message img:hover {
    opacity: 0.85;
  }

  .my-message {
    border-radius: 12px;
    background-color: #DBEAFE;
  }

  .my-message:hover {
    background-color: #b4cbe9;
    transition: 0.3s;
  }

  .their-message {
    border-radius: 12px;
    background-color: white;
    margin-left: auto;
    margin-right: 0;
  }

  .their-message:hover {
    background-color: rgb(231, 231, 231);
    transition: 0.3s;
  }

  .message .time {
    margin-top: 2px;
    display: block;
    font-size: 0.8rem;
    color: rgb(102, 102, 102);
  }

  .message-input {
    border-top: 1px solid rgb(190, 190, 190);
    display: flex;
    position: relative;
  }

  .typing {
    background-color: rgb(242, 251, 255);
    border-radius: 4px;
    padding: 4px 8px;
    width: fit-content;
    font-size: 0.7em;
    position: absolute;
    top: -25px;
    left: 2px;
  }

  .message-input input[type="text"] {
    flex-grow: 1;
    border: none;
    padding: 8px 16px;
  }

  .message-input input[type="text"]:focus {
    border: none;
    outline: none;
    transition: 0.3s;
  }

  .message-input a {
    text-decoration: none;
    padding: 8px;
    margin: 8px;
  }

  .message-input a:hover {
    background-color: rgb(215, 229, 255);
    border-radius: 4px;
  }

  .user .actions {
    color: rgb(161, 161, 161);
    font-size: 1.2rem;
  }

  .user .actions i {
    display: inline-block;
    border-radius: 8px;
    padding: 12px;
  }

  .user .actions i:hover {
    display: inline-block;
    color: rgb(128, 128, 128);
    background-color: rgb(215, 229, 255);
    transition: 0.3s;
  }

  #send-btn {
    background-color: #7fffd4;
    color: black;
    border: none;
    outline: none;
    padding: 10px 20px;
  }

  #send-btn:hover {
    background-color: #7fffd4e0;
  }

  #send-btn:active {
    background-color: #7fffd465;

  }

  #btn-back {
    position: absolute;
    top: 4%;
    left: 5%;
    padding: 10px 20px;
    border-radius: 4px;
    background-color: #7fffd4;
    color: black;
    outline: none;
  }

  #btn-back:hover {
    background-color: #7fffd4e0;
  }

  #btn-back:active {
    background-color: #7fffd465;

  }

  @media (max-width: 770px) {

    #btn-back {
      position: relative;
    }

  }
</style>

<body>
  <button id="btn-back">
    Trở lại
  </button>
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-md-9">
        <div class="rounded border mt-3 mb-3">
          <div class="user">
            <div id="avatar" class="avatar">C</div>
            <div class="user-info">
              <div id="username-target" class="user-name">Phạm Công Chánh</div>
              <div class="online">Vừa mới truy cập</div>
            </div>
            <div class="actions">
              <i class="fas fa-phone-alt"></i>
              <i class="fas fa-video"></i>
              <i class="fas fa-search"></i>
            </div>
          </div>
          <div id="conversation-area" class="conversation">
            <div class="message my-message">Demo chat hiện tại chỉ hỗ trợ được tin nhắn text. Không sử dụng database nên
              không lưu lịch sử chat và chỉ hiện tin nhắn khi đã vào phòng chat. Cảm ơn!
              <span class="time">08:59</span>
            </div>
            {{!-- <div class="message my-message">Ra quân chiến dịch Xuân tình nguyện năm 2021
              <span class="time">08:59</span>
            </div>
            <div class="message my-message">Sáng ngày 28/01/2021, Hội sinh viên Trường Đại học Tôn Đức Thắng (TDTU) đã
              tổ chức lễ ra quân chiến dịch Xuân tình nguyện TDTU năm 2021.
              <span class="time">08:59</span>
            </div>
            <div class="img-message my-message">
              <img src="https://tdtu.edu.vn/sites/www/files/articles/2021/Jan/Xuan-tinh-nguyen/xuan_tinh_nguyen_2.jpg">
            </div>
            <div class="message their-message">OK! Rất rốt
              <span class="time">08:59</span>
            </div>
            <div class="message their-message">Mình cũng sẽ đăng ký tham gia
              <span class="time">08:59</span>
            </div>
            <div class="message their-message">Theo kế hoạch, chiến dịch diễn ra từ ngày 28/01 đến ngày 06/02/2021, huy
              động khoảng 1.250 chiến sĩ với 2 mặt trận cấp trường và cấp cơ sở.
              <span class="time">08:59</span>
            </div>
            <div class="message my-message">Đây là hoạt động truyền thống của Hội sinh viên TDTU trong suốt 13 năm qua.
              <span class="time">08:59</span>
            </div>
            <div class="message my-message">Chúc mọi người năm mới vui vẻ
              <span class="time">08:59</span>
            </div>
            <div class="message their-message">Cám ơn mọi người
              <span class="time">08:59</span>
            </div>
            <div class="message their-message">Mình cũng chúc mọi người năm mới phát tài
              <span class="time">08:59</span>
            </div>
            <div class="img-message their-message">
              <img
                src="https://media.truyenhinhdulich.vn/upload/news/2300_binh_phuoc_khai_mac_duong_hoa_xuan_tet_ky_hoi.jpg">
            </div> --}}
          </div>
          <div class="message-input">
            {{!-- <div class="typing">Phạm Công Chánh đang soạn tin...</div> --}}
            <input name="msg" type="text" placeholder="Nhập tin nhắn">
            <button id="send-btn">Gửi</button>
          </div>
        </div>

      </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      let socket;
      let usernameOwn = sessionStorage.getItem('lab10-web');
      let userTarget;

      $(document).ready(() => {
        if (!usernameOwn) {
          window.location.href = '/'
        }

        socket = io();
        socket.on('connect', handleConnection)
        socket.on('disconnect', () => console.log('Disconnect successfully'));

        socket.on('list-users', handleListUsers)
        socket.on('private message', handlePrivateMessage);
        socket.on('register-username', newUserWithUsername)

        function handleConnection() {
          usernameClient = sessionStorage.getItem('lab10-web')
          document.title = 'Login - ' + usernameClient
          sessionStorage.setItem('lab10-web', usernameClient)
          socket.emit('register-username', usernameClient)
        }

        function handleListUsers(users) {
          const username = (location.pathname).replace('/chat/', '');
          userTarget = users.find(u => u.username == username);
          if (!userTarget) {
            window.location.href = '/'
          }
          $('#username-target').html(userTarget.username)
          $('#avatar').html(userTarget.username[0])
        }
        function newUserWithUsername(user) {
          if (user.username == userTarget.username) {
            userTarget = user;
          }
        }

        function handlePrivateMessage(data) {
          if (userTarget.username == data.from)
            createElementTheirMessage(data);
        }




        $('#send-btn').click((e) => {
          const msg = $('input[name="msg"]').val();
          sendMessage(msg);
        })

        $('input[name="msg"]').keyup(e => {
          if (e.keyCode === 13) {
            const msg = $('input[name="msg"]').val();
            sendMessage(msg);
          }
        })
        function sendMessage(msg) {
          const package = {
            from: usernameOwn,
            to: userTarget.id,
            msg: msg
          }
          socket.emit('private message', package);
          createElementMyMessage();
          $('input[name="msg"]').val('')
        }

        function createElementMyMessage() {
          const msg = $('input[name="msg"]').val();
          const messageDiv = $(`
            <div class="message their-message">${msg}
              <span class="time">${new Date(Date.now()).toLocaleTimeString()}</span>
            </div>
          `);
          $('#conversation-area').append(messageDiv)
          scrollToBottom()
        }

        function createElementTheirMessage(data) {
          const messageDiv = $(`
            <div class="message my-message">${data.msg}
              <span class="time">${new Date(Date.now()).toLocaleTimeString()}</span>
            </div>
          `);
          $('#conversation-area').append(messageDiv)
          scrollToBottom()
        }
      })
      function scrollToBottom() {
        $('#conversation-area').animate({ scrollTop: 9999 }, 1000);
      }

      $('#btn-back').click((e) => {
        window.location.href = '/chat'
      })
    </script>
</body>